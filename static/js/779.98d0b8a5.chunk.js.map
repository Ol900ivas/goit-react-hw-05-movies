{"version":3,"file":"static/js/779.98d0b8a5.chunk.js","mappings":"8RAEaA,EAAOC,EAAAA,EAAAA,EAAH,mEAKJC,EAAaD,EAAAA,EAAAA,GAAH,gD,SCwBvB,EA1BgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,qGACwBC,EAAAA,EAAAA,IAAaN,GADrC,OACQO,EADR,OAEEH,GAAW,OAAIG,IAFjB,4CAFc,0DACdC,EAKD,GAAE,CAACR,IAEsB,IAAnBG,EAAQM,QACb,wBACGN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACd,EAAD,YACE,UAACF,EAAD,sBAAee,MACf,uBAAIC,MAFWF,EADN,OAQf,mEAEH,C,0NC3BDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAEJ,IAAMC,EAAW,mCACXC,EAAa,mCAAG,+GAIfH,EAAAA,EAAAA,IAAU,uBAJK,uBAGfP,EAHe,EAGvBW,KAAQX,QAEVY,QAAQC,IAAI,YAAab,GALA,kBAMlBA,GANkB,gCAQzBY,QAAQE,MAAR,MARyB,yDAAH,qDAYbC,EAAgB,mCAAG,WAAMC,GAAN,kGAIlBT,EAAAA,EAAAA,IAAU,gBAAiB,CACnCU,OAAQ,CAAED,MAAOA,KALS,uBAGlBhB,EAHkB,EAG1BW,KAAQX,QAIVY,QAAQC,IAAI,eAAgBb,GAPA,kBAQrBA,GARqB,gCAU5BY,QAAQE,MAAR,MAV4B,yDAAH,sDAchBI,EAAc,mCAAG,WAAMzB,GAAN,kGAEHc,EAAAA,EAAAA,IAAA,iBAAoBd,IAFjB,uBAElBkB,EAFkB,EAElBA,KACRC,QAAQC,IAAI,aAAcF,GAHA,kBAInBA,GAJmB,oGAAH,sDAYdQ,EAAS,mCAAG,WAAM1B,GAAN,kGAIXc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,aAJW,uBAGX2B,EAHW,EAGnBT,KAAQS,KAEVR,QAAQC,IAAI,QAASO,GALA,kBAMdA,GANc,gCAQrBR,QAAQE,MAAR,MARqB,yDAAH,sDAYTf,EAAY,mCAAG,WAAMN,GAAN,kGAIdc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,aAJc,uBAGdO,EAHc,EAGtBW,KAAQX,QAEVY,QAAQC,IAAI,WAAYb,GALA,kBAMjBA,GANiB,gCAQxBY,QAAQE,MAAR,MARwB,yDAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","servises/fetch.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Name = styled.p`\n  font-weight: bold;\n  min-width: 200px;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../servises/fetch';\nimport { Name, ReviewItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReviews();\n    async function getReviews() {\n      const results = await fetchReviews(movieId);\n      setReviews([...results]);\n    }\n  }, [movieId]);\n\n  return reviews.length !== 0 ? (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <ReviewItem key={id}>\n          <Name>Author: {author}</Name>\n          <p>{content}</p>\n        </ReviewItem>\n      ))}\n    </ul>\n  ) : (\n    <p>We don't have any reviews for this movie</p>\n  );\n};\n\nexport default Reviews;\n\n// /movies/get - movie - reviews\n// запит оглядів для сторінки кінофільму.\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '91d51c28e9627ca3e06710d14d157b60',\n};\nexport const imageUrl = 'https://image.tmdb.org/t/p/w300/';\nexport const fetchTrending = async () => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get('/trending/movie/day');\n    console.log('Trending:', results);\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieByName = async query => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get('/search/movie', {\n      params: { query: query },\n    });\n    console.log('MovieByName:', results);\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    console.log('MovieById:', data);\n    return data;\n  } catch (error) {\n    // console.error(error.message);\n    // return error.message;\n    throw error;\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits`);\n    console.log('Cast:', cast);\n    return cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/movie/${movieId}/reviews`);\n    console.log('Reviews:', results);\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Name","styled","ReviewItem","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","results","getReviews","length","map","id","author","content","axios","api_key","imageUrl","fetchTrending","data","console","log","error","fetchMovieByName","query","params","fetchMovieById","fetchCast","cast"],"sourceRoot":""}