{"version":3,"file":"static/js/241.e2c56d13.chunk.js","mappings":"kVA+CA,EA1Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,uGACqBC,EAAAA,EAAAA,GAAUN,GAD/B,OACQO,EADR,OAEQC,EAAYD,EAAKE,KAAI,kBAA4C,CACrEC,GADyB,EAAGA,GAE5BC,KAFyB,EAAOA,KAGhCC,UAHyB,EAAaA,UAItCC,aAJyB,EAAwBA,aAAxB,IAM3BT,GAAQ,OAAII,IARd,4CAFc,0DACdM,EAWD,GAAE,CAACd,IAEmB,IAAhBG,EAAKY,QACV,wBACGZ,EAAKM,KAAI,SAAAO,GAAG,OACX,2BACE,gBACEC,IACED,EAAIH,aAAJ,UACOK,EAAAA,IADP,OACkBF,EAAIH,cAClBM,EAENC,IAAKJ,EAAIL,KACTU,MAAO,OAET,uBAAIL,EAAIL,QACR,uCACA,uBAAIK,EAAIJ,cAZDI,EAAIN,GADF,OAkBf,uEAEH,C,0NCpCDY,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAEJ,IAAML,EAAW,mCACXM,EAAa,mCAAG,+GAIfF,EAAAA,EAAAA,IAAU,uBAJK,uBAGfG,EAHe,EAGvBlB,KAAQkB,QAHe,kBAKlBA,GALkB,gCAOzBC,QAAQC,MAAR,MAPyB,yDAAH,qDAWbC,EAAgB,mCAAG,WAAMC,GAAN,kGAIlBP,EAAAA,EAAAA,IAAU,gBAAiB,CACnCQ,OAAQ,CAAED,MAAOA,KALS,uBAGlBJ,EAHkB,EAG1BlB,KAAQkB,QAIVC,QAAQK,IAAIN,GAPgB,kBAQrBA,GARqB,gCAU5BC,QAAQC,MAAR,MAV4B,yDAAH,sDAchBK,EAAc,mCAAG,WAAMhC,GAAN,kGAEHsB,EAAAA,EAAAA,IAAA,iBAAoBtB,IAFjB,uBAElBO,EAFkB,EAElBA,KACRmB,QAAQK,IAAIxB,GAHc,kBAInBA,GAJmB,gCAM1BmB,QAAQC,MAAR,MAN0B,yDAAH,sDAUdrB,EAAS,mCAAG,WAAMN,GAAN,kGAIXsB,EAAAA,EAAAA,IAAA,iBAAoBtB,EAApB,aAJW,uBAGXG,EAHW,EAGnBI,KAAQJ,KAEVuB,QAAQK,IAAI5B,GALS,kBAMdA,GANc,gCAQrBuB,QAAQC,MAAR,MARqB,yDAAH,sDAYTM,EAAY,mCAAG,WAAMjC,GAAN,kGAIdsB,EAAAA,EAAAA,IAAA,iBAAoBtB,EAApB,aAJc,uBAGdyB,EAHc,EAGtBlB,KAAQkB,QAEVC,QAAQK,IAAIN,GALY,kBAMjBA,GANiB,gCAQxBC,QAAQC,MAAR,MARwB,yDAAH,qD","sources":["components/Cast/Cast.jsx","servises/fetch.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast, imageUrl } from '../../servises/fetch';\nimport defaultProfilePhoto from '../../images/defaultProfilePhoto.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getCast();\n    async function getCast() {\n      const data = await fetchCast(movieId);\n      const movieCast = data.map(({ id, name, character, profile_path }) => ({\n        id,\n        name,\n        character,\n        profile_path,\n      }));\n      setCast([...movieCast]);\n    }\n  }, [movieId]);\n\n  return cast.length !== 0 ? (\n    <ul>\n      {cast.map(one => (\n        <li key={one.id}>\n          <img\n            src={\n              one.profile_path\n                ? `${imageUrl}${one.profile_path}`\n                : defaultProfilePhoto\n            }\n            alt={one.name}\n            width={100}\n          />\n          <p>{one.name}</p>\n          <p>character:</p>\n          <p>{one.character}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>Sorry, there's no information about the cast</p>\n  );\n};\n\nexport default Cast;\n","// 91d51c28e9627ca3e06710d14d157b60\n// For home\n//https://api.themoviedb.org/3/trending/movie/day?api_key=91d51c28e9627ca3e06710d14d157b60\n// \"id\": 868759,\n// \"title\": \"Ghosted\",\n// \"poster_path\": \"/liLN69YgoovHVgmlHJ876PKi5Yi.jpg\",\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '91d51c28e9627ca3e06710d14d157b60',\n};\nexport const imageUrl = 'https://image.tmdb.org/t/p/w300/';\nexport const fetchTrending = async () => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get('/trending/movie/day');\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieByName = async query => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get('/search/movie', {\n      params: { query: query },\n    });\n    console.log(results);\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits`);\n    console.log(cast);\n    return cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/movie/${movieId}/reviews`);\n    console.log(results);\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchCast","data","movieCast","map","id","name","character","profile_path","getCast","length","one","src","imageUrl","defaultProfilePhoto","alt","width","axios","api_key","fetchTrending","results","console","error","fetchMovieByName","query","params","log","fetchMovieById","fetchReviews"],"sourceRoot":""}