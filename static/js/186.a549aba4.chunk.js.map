{"version":3,"file":"static/js/186.a549aba4.chunk.js","mappings":"yOA8BA,UA1BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,qGACwBC,EAAAA,EAAAA,IAAaN,GADrC,OACQO,EADR,OAEEH,GAAW,OAAIG,IAFjB,4CAFc,0DACdC,EAKD,GAAE,CAACR,IAEsB,IAAnBG,EAAQM,QACb,wBACGN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EADE,OAQf,mEAEH,C,0NCnBDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAEJ,IAAMC,EAAW,mCACXC,EAAa,mCAAG,+GAIfH,EAAAA,EAAAA,IAAU,uBAJK,uBAGfP,EAHe,EAGvBW,KAAQX,QAHe,kBAKlBA,GALkB,gCAOzBY,QAAQC,MAAR,MAPyB,yDAAH,qDAWbC,EAAgB,mCAAG,WAAMC,GAAN,kGAIlBR,EAAAA,EAAAA,IAAU,gBAAiB,CACnCS,OAAQ,CAAED,MAAOA,KALS,uBAGlBf,EAHkB,EAG1BW,KAAQX,QAIVY,QAAQK,IAAIjB,GAPgB,kBAQrBA,GARqB,gCAU5BY,QAAQC,MAAR,MAV4B,yDAAH,sDAchBK,EAAc,mCAAG,WAAMzB,GAAN,kGAEHc,EAAAA,EAAAA,IAAA,iBAAoBd,IAFjB,uBAElBkB,EAFkB,EAElBA,KACRC,QAAQK,IAAIN,GAHc,kBAInBA,GAJmB,gCAM1BC,QAAQC,MAAR,MAN0B,yDAAH,sDAUdM,EAAS,mCAAG,WAAM1B,GAAN,kGAIXc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,aAJW,uBAGX2B,EAHW,EAGnBT,KAAQS,KAEVR,QAAQK,IAAIG,GALS,kBAMdA,GANc,gCAQrBR,QAAQC,MAAR,MARqB,yDAAH,sDAYTd,EAAY,mCAAG,WAAMN,GAAN,kGAIdc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,aAJc,uBAGdO,EAHc,EAGtBW,KAAQX,QAEVY,QAAQK,IAAIjB,GALY,kBAMjBA,GANiB,gCAQxBY,QAAQC,MAAR,MARwB,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","servises/fetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../servises/fetch';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReviews();\n    async function getReviews() {\n      const results = await fetchReviews(movieId);\n      setReviews([...results]);\n    }\n  }, [movieId]);\n\n  return reviews.length !== 0 ? (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <p>Author: {author}</p>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>We don't have any reviews for this movie</p>\n  );\n};\n\nexport default Reviews;\n\n// /movies/get - movie - reviews\n// запит оглядів для сторінки кінофільму.\n","// 91d51c28e9627ca3e06710d14d157b60\n// For home\n//https://api.themoviedb.org/3/trending/movie/day?api_key=91d51c28e9627ca3e06710d14d157b60\n// \"id\": 868759,\n// \"title\": \"Ghosted\",\n// \"poster_path\": \"/liLN69YgoovHVgmlHJ876PKi5Yi.jpg\",\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '91d51c28e9627ca3e06710d14d157b60',\n};\nexport const imageUrl = 'https://image.tmdb.org/t/p/w300/';\nexport const fetchTrending = async () => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get('/trending/movie/day');\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieByName = async query => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get('/search/movie', {\n      params: { query: query },\n    });\n    console.log(results);\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits`);\n    console.log(cast);\n    return cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/movie/${movieId}/reviews`);\n    console.log(results);\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","results","getReviews","length","map","id","author","content","axios","api_key","imageUrl","fetchTrending","data","console","error","fetchMovieByName","query","params","log","fetchMovieById","fetchCast","cast"],"sourceRoot":""}