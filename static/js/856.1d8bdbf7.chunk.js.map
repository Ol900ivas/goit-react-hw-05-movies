{"version":3,"file":"static/js/856.1d8bdbf7.chunk.js","mappings":"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","sources":["components/NotFound/NotFound.jsx","components/NotFound/NotFound.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","servises/fetch.js"],"sourcesContent":["import Oops from '../../images/oops.jpg';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport {\n  NotFoundWrap,\n  Message,\n  Img,\n  Div,\n  StyledLink,\n  Span,\n} from './NotFound.styled';\n\nconst NotFound = () => {\n  return (\n    <main>\n      <NotFoundWrap>\n        <Img src={Oops} alt=\"Not found\" width={600} />\n        <Message>Sorry, page not found!</Message>\n        <Div>\n          <StyledLink to=\"/\">\n            <BsArrowLeft size={20} />\n            <Span> Go Home</Span>\n          </StyledLink>\n        </Div>\n      </NotFoundWrap>\n    </main>\n  );\n};\n\nexport default NotFound;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const NotFoundWrap = styled.div``;\n\nexport const Img = styled.img`\n  margin: 40px auto;\n`;\n\nexport const Message = styled.h1`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const Div = styled.div`\n  width: 100px;\n  margin: 0 auto;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  text-align: center;\n  width: 100px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: bold;\n  color: black;\n  font-weight: 500;\n  background-color: #f3efc3df;\n  border-color: rgba(0, 0, 0, 0.3);\n  font: inherit;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: #336fb3df;\n  }\n`;\n\nexport const Span = styled.span`\n  text-align: center;\n  font-weight: bold;\n`;\n","import styled from '@emotion/styled';\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-bottom: 40px;\n  margin-top: 12px;\n`;\nexport const DetailsWrap = styled.div``;\nexport const MovieTitle = styled.h1`\n  margin-bottom: 20px;\n`;\nexport const Par = styled.p`\n  margin-bottom: 12px;\n`;\nexport const SubTitle = styled.h2`\n  margin-bottom: 20px;\n`;\nexport const Ul = styled.ul`\n  display: flex;\n  gap: 30px;\n  margin-bottom: 20px;\n`;\nexport const Li = styled.li``;\n","import PropTypes from 'prop-types';\nimport defaultPoster from '../../images/defaultPoster.png';\nimport {\n  DetailsContainer,\n  DetailsWrap,\n  MovieTitle,\n  Par,\n  SubTitle,\n  Ul,\n  Li,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ poster, title, date, vote, overview, genres }) => {\n  const percentageVote = Math.round(vote * 10);\n  const releaseYear = new Date(date).getFullYear();\n  const imageUrl = 'https://image.tmdb.org/t/p/w300/';\n  return (\n    <DetailsContainer>\n      <img\n        src={poster ? `${imageUrl}${poster}` : defaultPoster}\n        alt={title}\n        width={360}\n      />\n      <DetailsWrap>\n        <MovieTitle>\n          {title} ({releaseYear})\n        </MovieTitle>\n        <Par>User score: {percentageVote}%</Par>\n        <SubTitle>Overview</SubTitle>\n        <Par>{overview}</Par>\n        <SubTitle>Genres</SubTitle>\n        <Ul>\n          {genres && genres.map(({ id, name }) => <Li key={id}>{name}</Li>)}\n        </Ul>\n      </DetailsWrap>\n    </DetailsContainer>\n  );\n};\n\nMovieCard.propTypes = {\n  poster: PropTypes.string,\n  title: PropTypes.string,\n  date: PropTypes.string,\n  vote: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default MovieCard;\n","import { useState, useEffect, Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { fetchMovieById } from '../servises/fetch';\n\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport Loader from '../components/Loader/Loader';\nimport { SubTitle, Ul } from '../components/MovieCard/MovieCard.styled';\nimport NotFound from '../components/NotFound/NotFound';\nimport { StyledLink, Span } from '../components/NotFound/NotFound.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/movies');\n  useEffect(() => {\n    getMovieById();\n    async function getMovieById() {\n      try {\n        const data = await fetchMovieById(movieId);\n        setMovieInfo(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n  }, [movieId]);\n  if (!movieInfo) {\n    return <NotFound />;\n  }\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieInfo;\n\n  return (\n    <main>\n      <StyledLink to={backLinkLocation.current}>\n        <BsArrowLeft size={20} />\n        <Span>Go back</Span>\n      </StyledLink>\n      <MovieCard\n        poster={poster_path}\n        title={title}\n        date={release_date}\n        vote={vote_average}\n        overview={overview}\n        genres={genres}\n      />\n      <SubTitle>Additional information</SubTitle>\n      <Ul>\n        <li>\n          <Link to=\"cast\">\n            <b>Cast</b>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">\n            <b>Reviews</b>\n          </Link>\n        </li>\n      </Ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '91d51c28e9627ca3e06710d14d157b60',\n};\nexport const imageUrl = 'https://image.tmdb.org/t/p/w300/';\nexport const fetchTrending = async () => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get('/trending/movie/day');\n    console.log('Trending:', results);\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieByName = async query => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get('/search/movie', {\n      params: { query: query },\n    });\n    console.log('MovieByName:', results);\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    console.log('MovieById:', data);\n    return data;\n  } catch (error) {\n    // console.error(error.message);\n    // return error.message;\n    throw error;\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits`);\n    console.log('Cast:', cast);\n    return cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/movie/${movieId}/reviews`);\n    console.log('Reviews:', results);\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["src","Oops","alt","width","to","size","NotFoundWrap","styled","Img","Message","Div","StyledLink","Link","Span","DetailsContainer","DetailsWrap","MovieTitle","Par","SubTitle","Ul","Li","poster","title","date","vote","overview","genres","percentageVote","Math","round","releaseYear","Date","getFullYear","defaultPoster","map","id","name","useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","fetchMovieById","data","console","log","message","getMovieById","NotFound","poster_path","release_date","vote_average","current","Suspense","fallback","Loader","axios","api_key","imageUrl","fetchTrending","results","error","fetchMovieByName","query","params","fetchCast","cast","fetchReviews"],"sourceRoot":""}